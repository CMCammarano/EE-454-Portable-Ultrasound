`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 11/07/2015 06:38:17 PM
// Design Name: 
// Module Name: m_port_ultra
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module m_port_ultra (	
	input clk,
	input [1:0] slowClk,
	input reset_n,
	input ack,
	input shiftRight,
	input shiftLeft,
	output [4095:0] convexPoints,
	output [7:0] convexSetSize
);

	// Registers -- State machine intermediate values
	reg [3:0] timer;
	reg processorEnable;
	
	// Wires -- Processor array inputs
	wire [8191:0] convexCloud;
	
	// Wires -- Processor array outputs
	wire [4095:0] convexHull1;
	wire [4095:0] convexHull2;
	wire [7:0] convexHullSize1;
	wire [7:0] convexHullSize2;

	// Module declaration
	m_port_ultra_processor_array processorArray (
		.clk (clk),
		.reset_n (reset_n),
		.processorEnable (processorEnable),
		.convexCloud (convexCloud),
		.convexHull1 (convexHull1),
		.convexHull2 (convexHull2),
		.convexHullSize1 (convexHullSize1),
		.convexHullSize2 (convexHullSize2)
	);
	
	// State Machine
	reg[4:0] state;

	localparam 
		INIT			=	5'b00001,
		PULSE			= 	5'b00010,
		DIVIDE			= 	5'b00100,
		CONVEX_HULL		= 	5'b01000,
		DISPLAY			= 	5'b10000;
		
	// Create our demonstration set of points
	assign convexCloud = 8192'
		
	// Processor output
	assign convexPoints = convexHull1;
	//NSL and State Machine
	always @(posedge slowClk, negedge reset_n) begin
		
		if (!reset_n) begin
			
			timer <= 0;
			processorEnable <= 0;
			
			state <= INIT;
		end
		
		else begin
			case (state)
				INIT: begin
					
					timer <= 0;
					
					if (ack) begin
						state <= PULSE;
					end
				end
			
				PULSE: begin
					
					timer <= timer + 1;
				
					if (timer >= 9) begin
						state <= DIVIDE;
					end
				end
				
				DIVIDE: begin
					
					processorEnable <= 1;
					state <= CONVEX_HULL;
				end
				
				CONVEX_HULL: begin 
					
					state <= DISPLAY;
				end
				
				DISPLAY: begin
				
					if (ack) begin
						state <= INIT;
					end
				end	
			endcase
		end 
	end

endmodule
